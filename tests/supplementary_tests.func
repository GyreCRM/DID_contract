
slice __test_parse_sender_addr() {
    set_default_initial_data();
    slice manager_address = "kQDmznN8tOKzSQxHTzMTege2QKFcrCwnkTNRtY2cubGB1IKu"a;

    slice message_body = begin_cell()   
                    .store_uint(2, 32)  ;; op
	                .store_uint(12345, 64) ;; query id
                    .store_slice("kQDmznN8tOKzSQxHTzMTege2QKFcrCwnkTNRtY2cubGB1IKu")
                    .end_cell().begin_parse();

    var msg = begin_cell()
            .store_uint(0x6, 4)
            .store_slice(manager_address) ;; sender's address
            .store_coins(1)  ;; amount of nanoTons to send
            .store_uint(0, 1 + 4 + 4 + 64 + 32 + 1 + 1) ;; execution of serialization primitives ends
            ;;(includes 14 parameters)
            .store_slice(message_body)
            .end_cell();

    var (int gas_used, stack) = invoke_method(parse_sender_address, [msg]);
    [slice sender_address] = stack;
    throw_unless(102, equal_slices(sender_address, manager_address));
    return sender_address;
}

slice __test_get_manager(){
    set_default_initial_data();

    var (int gas_used, stack) = invoke_method(manager, []);
    [slice manager_address] = stack;
    return manager_address;
}

(slice,slice) __test_load_data() {
    set_default_initial_data();
    slice addr = "kQDmznN8tOKzSQxHTzMTege2QKFcrCwnkTNRtY2cubGB1IKu"a;

    var (int gas_used, stack) = invoke_method(load_data, []);
    [slice manager_address, cell dict] = stack;

    throw_if(107, dict.begin_parse().slice_data_empty?());
    throw_unless(106, equal_slices(addr,manager_address));
    return (addr, manager_address);
}

int __test_equal_slices_contract() {
    set_default_initial_data();
    slice sender_address = "kQDmznN8tOKzSQxHTzMTege2QKFcrCwnkTNRtY2cubGB1IKu"a;
    
    var (_ , stack) = invoke_method(load_data, []);
    [slice manager_address, cell dict] = stack;

    var (int gas_used, stack) = invoke_method(equal_slices, [sender_address, manager_address]);
    [int result] = stack;
    throw_unless(102, result);
    return result;
}

;; EROR CODES:

;; 102 - not a manager tries to change manager address 
;; 103 - in_msg_body slice has unread bits
;; 104 - no data found in dict for that key
;; 105 - no reference cell in msg
;; 106 - reference cell is empty 
;; 107 - dict cell has 0 bits
;; 1001 - not a manger wants to add data